namespace App\Http\Controllers;
use Illuminate\Http\Request;
use App\Http\Repositories\{{name}}Repository;
use {{model_namespace}};
use App\Http\Requests\{{name}}\Create{{name}};
use App\Http\Requests\{{name}}\Update{{name}};
use App\Http\Requests\LimitRequest;

class {{name}}Controller extends Controller
{
    private ${{name}}Repository;
    public function __construct()
    {
        $this->{{name}}Repository = new {{name}}Repository(new {{model}}());
    }

    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index(LimitRequest $request)
    {
        return $this->{{name}}Repository->index($request->take, $request->skip);
    }


    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Create{{name}} $request)
    {
        $data = $request->validated();
        return $this->{{name}}Repository->store($data);
    }

    /**
     * Display the specified resource.
     *
     * @param  \App\\$name  $name
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        return $this->{{name}}Repository->show($id);
    }


    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \App\\$name  $name
     * @return \Illuminate\Http\Response
     */
    public function update(Update{{name}} $request, $id)
    {
        $data = $request->validated();
        return $this->{{name}}Repository->update($id, $data);
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \App\\$name  $name
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        return $this->{{name}}Repository->destroy($id);
    }

}
